version: '3.8'

services:
  user-db-service:
    container_name: user-postgresql
    image: postgres:latest
    environment:
      POSTGRES_DB: users-db
      POSTGRES_USER: users-postgres-user
      POSTGRES_PASSWORD: users-postgres-pwd
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgres
    networks:
      - fase-05-network

  user-api:
    container_name: user-api
    build:
      context: ./users
    depends_on:
      - user-db-service
    ports:
      - "8080:8080"
    environment:
      spring.datasource.url: jdbc:postgresql://user-db-service/users-db
      spring.datasource.username: users-postgres-user
      spring.datasource.password: users-postgres-pwd
    networks:
      - fase-05-network

  company-db-service:
    container_name: company-postgresql
    image: postgres:latest
    environment:
      POSTGRES_DB: company-db
      POSTGRES_USER: company-postgres-user
      POSTGRES_PASSWORD: company-postgres-pwd
    ports:
      - 5433:5432
    volumes:
      - /var/lib/postgres
    networks:
      - fase-05-network

  company-api:
    container_name: company-api
    build:
      context: ./company
    depends_on:
      - company-db-service
    ports:
      - "8081:8081"
    environment:
      spring.datasource.url: jdbc:postgresql://company-db-service/company-db
      spring.datasource.username: company-postgres-user
      spring.datasource.password: company-postgres-pwd
    networks:
      - fase-05-network

  product-db-service:
    container_name: product-postgresql
    image: postgres:latest
    environment:
      POSTGRES_DB: product-db
      POSTGRES_USER: product-postgres-user
      POSTGRES_PASSWORD: product-postgres-pwd
    ports:
      - 5434:5432
    volumes:
      - /var/lib/postgres
    networks:
      - fase-05-network

  product-api:
    container_name: product-api
    build:
      context: ./product
    depends_on:
      - product-db-service
    ports:
      - "8082:8082"
    environment:
      spring.datasource.url: jdbc:postgresql://product-db-service/product-db
      spring.datasource.username: product-postgres-user
      spring.datasource.password: product-postgres-pwd
    networks:
      - fase-05-network

  order-db-service:
    container_name: order-postgresql
    image: postgres:latest
    environment:
      POSTGRES_DB: order-db
      POSTGRES_USER: order-postgres-user
      POSTGRES_PASSWORD: order-postgres-pwd
    ports:
      - 5435:5432
    volumes:
      - /var/lib/postgres
    networks:
      - fase-05-network

  order-api:
    container_name: order-api
    build:
      context: ./order
    depends_on:
      - order-db-service
    ports:
      - "8083:8083"
    environment:
      spring.datasource.url: jdbc:postgresql://order-db-service/order-db
      spring.datasource.username: order-postgres-user
      spring.datasource.password: order-postgres-pwd
      URL_USER: http://user-api:8080
      URL_COMPANY: http://company-api:8081
      URL_PRODUCT: http://product-api:8082
    networks:
      - fase-05-network

  payment-db-service:
    container_name: payment-postgresql
    image: postgres:latest
    environment:
      POSTGRES_DB: payment-db
      POSTGRES_USER: payment-postgres-user
      POSTGRES_PASSWORD: payment-postgres-pwd
    ports:
      - 5436:5432
    volumes:
      - /var/lib/postgres
    networks:
      - fase-05-network

  payment-api:
    container_name: payment-api
    build:
      context: ./payment
    depends_on:
      - payment-db-service
    ports:
      - "8084:8084"
    environment:
      spring.datasource.url: jdbc:postgresql://payment-db-service/payment-db
      spring.datasource.username: payment-postgres-user
      spring.datasource.password: payment-postgres-pwd
      URL_USER: http://user-api:8080
      URL_COMPANY: http://company-api:8081
      URL_ORDER: http://order-api:8083
    networks:
      - fase-05-network

networks:
  fase-05-network:
    driver: bridge